<?php

use BehatEditorServices\BehatEditorSitesController;
use BehatEditorServices\SiteModel;

include_once 'behat_editor_services.features.inc';

/**
 * Implements hook_help().
 */
function behat_editor_services_help($path, $arg) {
    switch ($path) {
        case 'admin/config/development/behat_editor_services' :
            return '<p>' . t('Configure settings for <a href="@behat_editor_services">Behat Editor Services</a>') . '</p>';
    }
}

function behat_editor_services_permission()
{
        return array(
            'admin behat_editor_services' => array(
                'title' => t('Admin Default Settings'),
                'description' => t("Set settings like node type to watch etc")
            )
        );
}

function behat_editor_services_menu()
{
    $items['admin/config/development/behat_editor_services'] = array(
        'title'             => t("Behat Editor Services Settings"),
        'page callback'     => 'drupal_get_form',
        'page arguments'    => array(
            'behat_editor_services_admin_form'
        ),
        'file'              => 'behat_editor_services.admin.inc',
        'access arguments'  => array(
            'admin behat_editor_services'
        ),
        'description'       => 'Set some defaults for this module'

    );

    $items['admin/behat_editor_services/testarea'] = array(
        'title'             => t("Behat Editor Services Settings"),
        'page callback'     => 'behat_editor_services_test_area',
        'access arguments'  => array(
            'admin behat_editor_services'
        ),
        'description'       => 'Set some defaults for this module',
        'type'              => MENU_CALLBACK

    );
    return $items;
}

function behat_editor_services_test_area()
{
    $output = 'test';
    composer_manager_register_autoloader();
    $model = new SiteModel();
    //$sites = $model->getSitesForUserId(1);
    $sites = $model->getSiteAndTestsForSiteUUID('94790c7d-5682-4710-afc6-c36c502cc3c3');

    dpm($sites);
    return $output;
}

/**
 * Implements hook_node_insert().
 *
 */
function behat_editor_services_node_insert($node) {
    if (variable_get('behat_editor_services_site_node_type') == $node->type) {
        composer_manager_register_autoloader();
        $uuid = $node->uuid;
        $siteController = new BehatEditorSitesController();
        $create_output = $siteController->create($uuid, $node);
        watchdog('behat_editor_services', "Made related folder for %uuid in path %path", array('%uuid' => $uuid, '%path' => $create_output));
        drupal_set_message(t("New folder made for related tests %path", array('%path' => $create_output)), $type = 'status');
    }
}

/**
 * Implements hook_services_resources()
 */
function behat_editor_services_services_resources() {
    return array(
        "sites" => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieve a token record',
                    'callback' => 'behat_editor_services_rest',
                    'access callback' => 'behat_editor_services_rest_access',
                    'args' => array(
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '0'),
                            'optional' => FALSE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '1'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '2'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '3'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '4'),
                            'optional' => TRUE,
                        ),
                    ),
                ),
                'create' => array(
                    'help' => 'Create a token record',
                    'callback' => 'behat_editor_services_rest',
                    'access callback' => 'behat_editor_services_rest_access',
                    'args' => array(
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '0'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '1'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '2'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '3'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '4'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'data',
                            'type' => 'struct',
                            'description' => 'The tokens structure',
                            'source' => 'data',
                            'optional' => FALSE,
                        ),
                    ),
                ),
                'update' => array(
                    'help' => 'Update a token record',
                    'callback' => 'behat_editor_services_rest',
                    'access callback' => 'behat_editor_services_rest_access',
                    'args' => array(
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '0'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '1'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '2'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '3'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'method',
                            'type' => 'string',
                            'description' => 'id or name of chile',
                            'source' => array('path' => '4'),
                            'optional' => TRUE,
                        ),
                        array(
                            'name' => 'parameters',
                            'type' => 'array',
                            'description' => 'The tokens structure',
                            'source' => 'data',
                            'optional' => FALSE,
                        ),
                    ),
                ),
                'delete' => array(
                    'help' => 'Delete a token record',
                    'callback' => 'behat_editor_services_rest',
                    'args' => array(
                        array(
                            'name' => 'data',
                            'type' => 'struct',
                            'description' => 'The tokens structure',
                            'source' => 'data',
                            'optional' => FALSE,
                        ),
                    ),
                ),
                'index' => array(
                    'help' => 'Retrieves users sites',
                    'callback' => 'behat_editor_services_rest',
                    'access callback' => 'behat_editor_services_rest_access',
                ),
            ),
        ),
    );
}

function behat_editor_services_rest_access() {
    return TRUE;
}

function behat_editor_services_rest() {
    composer_manager_register_autoloader();

    //arg 0     = ID of site
    //arg 1     = could be tests, reports, tags, batches
    //arg 2     = could be id of child 1
    //arg 3     = could be tokens, tags
    //arg 4     = could be the id of child 2
    $request_type = $_SERVER['REQUEST_METHOD'];
    $args = func_get_args();
    $method                          =   strtolower($request_type);
    $method                         .=   'Sites';
    $request                         =   $_REQUEST;
    _behat_editor_services_process_args($method, $args);
    $route = new BehatEditorServices\BehatEditorRoutes();

    $output = null;
    $output = $route->$method($args, $request);

    drupal_json_output($output);
    exit();
}

function _behat_editor_services_process_args(&$method, $args) {
    if($args[1] != NULL) {
        $method           .=  ucwords($args[1]);
        if($args[2] != NULL) {
            if(!is_numeric($args[2]) && strpos($args[2], 'feature') === FALSE) {
                $method           .=  ucwords($args[2]);
            }
            if($args[3] != NULL && !is_numeric($args[3])) {
                $method   .=  ucwords($args[3]);
            }
        }
    }
}